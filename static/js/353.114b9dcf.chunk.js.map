{"version":3,"file":"static/js/353.114b9dcf.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,EAAAA,KAAH,uFAMJC,EAAQD,EAAAA,EAAAA,MAAH,8GAMLE,EAAQF,EAAAA,EAAAA,MAAH,sMAaLG,EAAYH,EAAAA,EAAAA,OAAH,gU,UC3BTI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAqB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,mBCK1BC,EAAc,WACzB,IAAMJ,GAAWK,EAAAA,EAAAA,IAAYP,GACvBQ,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,OAEL,EAmBKC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACnB,EAAD,CAAMyB,KAAK,SAASC,SAvBD,SAAAL,GAGnB,GAFAA,EAAMM,iBAEFpB,EAASqB,MAAK,SAAAC,GAAO,OAAIA,EAAQb,OAASA,CAArB,IAEvB,OADAc,MAAM,GAAD,OAAId,EAAJ,6BACET,EAETM,GACEkB,EAAAA,EAAAA,IAAW,CACTf,KAAAA,EACAE,OAAAA,KAIJM,GACD,EAQC,WACE,SAACtB,EAAD,CAAO8B,QAAQ,OAAf,mBACA,SAAC7B,EAAD,CACEsB,KAAK,OACLT,KAAK,OACLiB,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUhB,EACVG,MAAOP,KAGT,SAACd,EAAD,CAAO8B,QAAQ,MAAf,qBACA,SAAC7B,EAAD,CACEsB,KAAK,OACLT,KAAK,SACLiB,QAAQ,qGACRE,UAAQ,EACRC,SAAUhB,EACVG,MAAOL,KAET,SAACd,EAAD,CAAWqB,KAAK,SAAhB,4BAGL,ECzEYY,EAAOpC,EAAAA,EAAAA,GAAH,2GAOJqC,EAAWrC,EAAAA,EAAAA,GAAH,sKASRsC,EAAYtC,EAAAA,EAAAA,OAAH,qUChBTuC,EAAU,SAAC,GAAD,IAAGxB,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQuB,EAAjB,EAAiBA,QAAjB,OACrB,UAACH,EAAD,YACE,yBACGtB,EADH,KACWE,MAEX,SAACqB,EAAD,CAAWd,KAAK,SAASgB,QAASA,EAAlC,sBALmB,ECKVC,EAAc,WACzB,OAAoC9B,EAAAA,EAAAA,KAAY,SAAAN,GAAK,OAAIA,EAAMC,QAAV,IAA7CC,EAAR,EAAQA,MAAOmC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,UAChB/B,GAAWC,EAAAA,EAAAA,MAGX+B,GAFWjC,EAAAA,EAAAA,IAAYH,GAEKqC,cAE5BC,EAAmBvC,EAAME,QAAO,qBAAGM,KAClC8B,cAAcE,SAASH,EADQ,IAQtC,OAJAI,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAGF,gCACG+B,IAAa,uCACbpC,IACC,SAAC6B,EAAD,UACGU,EAAiBI,KAAI,gBAAGC,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,SAACsB,EAAD,CAEExB,KAAMA,EACNE,OAAQA,EACRuB,QAAS,kBAAM5B,GAASwC,EAAAA,EAAAA,IAAcD,GAA7B,GAHJA,EAFa,MAUzBT,IAAS,wBAAKA,MAGpB,ECtCYW,EAAcrD,EAAAA,EAAAA,MAAH,8GAMXsD,EAActD,EAAAA,EAAAA,MAAH,wM,UCJXuD,EAAS,WACpB,IAAM3C,GAAWC,EAAAA,EAAAA,MACXJ,GAASE,EAAAA,EAAAA,KAAY,SAAAN,GAAK,OAAIA,EAAMI,MAAV,IAKhC,OACE,UAAC4C,EAAD,oCAEE,SAACC,EAAD,CAAa9B,KAAK,OAAOF,MAAOb,EAAQ0B,SAN3B,SAAAqB,GACf5C,GAAS6C,EAAAA,EAAAA,GAAUD,EAAEnC,OAAOC,OAC7B,MAOF,ECbc,SAASoC,IACtB,OACE,4BACE,SAAChD,EAAD,KACA,SAAC6C,EAAD,KACA,yCACA,SAACd,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  padding: 15px;\n  border: 2px solid green;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const Input = styled.input`\n  padding: 2px 5px;\n  margin-top: 6px;\n  width: 200px;\n  :hover,\n  :focus {\n    border-color: green;\n    border-radius: 4px;\n\n    transition: all 250ms linear;\n  }\n`;\n\nexport const ButtonAdd = styled.button`\n  padding: 2px 10px;\n  margin-top: 20px;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: darkolivegreen;\n  color: aliceblue;\n  cursor: pointer;\n  font-weight: 500;\n\n:hover,\n:focus {\n  background-color: #c4d145;\n  color: white;\n\n  transition: all 250ms linear;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\n","import { useState } from 'react';\nimport { ButtonAdd, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/api';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n      return contacts;\n    }\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form type=\"submit\" onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n      />\n\n      <Label htmlFor=\"tel\">Number</Label>\n      <Input\n        type=\"text\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <ButtonAdd type=\"submit\"> Add contact</ButtonAdd>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  padding-right: 20px;\n  list-style: none;\n  width: 300px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nexport const ButtonDel = styled.button`\n  display: flex;\n  padding: 2px 10px;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: #ac2828;\n  color: aliceblue;\n  cursor: pointer;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    background-color: #e46969;\n    color: white;\n\n    transition: all 250ms linear;\n  }\n`;\n","import { ButtonDel, ListItem } from './ContactList.styled';\n\nexport const Contact = ({ name, number, onClick }) => (\n  <ListItem>\n    <p>\n      {name}: {number}\n    </p>\n    <ButtonDel type=\"button\" onClick={onClick}>\n      Delete\n    </ButtonDel>\n  </ListItem>\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from './Contact';\nimport { List } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { selectStatusFilter } from 'redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/api';\n\nexport const ContactList = () => {\n  const { items, error, isLoading } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n\n  const filteredContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <h2>Loading...</h2>}\n      {items && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => (\n            <Contact\n              key={id}\n              name={name}\n              number={number}\n              onClick={() => dispatch(deleteContact(id))}\n            />\n          ))}\n        </List>\n      )}\n      {error && <h2>{error}</h2>}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const FilterInput = styled.input`\n  padding: 2px 5px;\n  margin-top: 6px;\n  width: 300px;\n\n  :hover,\n  :focus {\n    border-color: green;\n    border-radius: 4px;\n\n    transition: all 250ms linear;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={onChange} />\n    </FilterLabel>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Form","styled","Label","Input","ButtonAdd","selectContacts","state","contacts","items","selectStatusFilter","filter","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","type","onSubmit","preventDefault","some","contact","alert","addContact","htmlFor","pattern","title","required","onChange","List","ListItem","ButtonDel","Contact","onClick","ContactList","error","isLoading","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","id","deleteContact","FilterLabel","FilterInput","Filter","e","setFilter","Contacts"],"sourceRoot":""}